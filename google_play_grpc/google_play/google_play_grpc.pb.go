// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.19.4
// source: google_play.protos

package google_play

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// GooglePlayClient is the client API for GooglePlay service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type GooglePlayClient interface {
	GetGameDetail(ctx context.Context, in *GameId, opts ...grpc.CallOption) (*GameDetail, error)
}

type googlePlayClient struct {
	cc grpc.ClientConnInterface
}

func NewGooglePlayClient(cc grpc.ClientConnInterface) GooglePlayClient {
	return &googlePlayClient{cc}
}

func (c *googlePlayClient) GetGameDetail(ctx context.Context, in *GameId, opts ...grpc.CallOption) (*GameDetail, error) {
	out := new(GameDetail)
	err := c.cc.Invoke(ctx, "/google_play.GooglePlay/GetGameDetail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GooglePlayServer is the server API for GooglePlay service.
// All implementations must embed UnimplementedGooglePlayServer
// for forward compatibility
type GooglePlayServer interface {
	GetGameDetail(context.Context, *GameId) (*GameDetail, error)
	mustEmbedUnimplementedGooglePlayServer()
}

// UnimplementedGooglePlayServer must be embedded to have forward compatible implementations.
type UnimplementedGooglePlayServer struct {
}

func (UnimplementedGooglePlayServer) GetGameDetail(context.Context, *GameId) (*GameDetail, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetGameDetail not implemented")
}
func (UnimplementedGooglePlayServer) mustEmbedUnimplementedGooglePlayServer() {}

// UnsafeGooglePlayServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to GooglePlayServer will
// result in compilation errors.
type UnsafeGooglePlayServer interface {
	mustEmbedUnimplementedGooglePlayServer()
}

func RegisterGooglePlayServer(s grpc.ServiceRegistrar, srv GooglePlayServer) {
	s.RegisterService(&GooglePlay_ServiceDesc, srv)
}

func _GooglePlay_GetGameDetail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GameId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GooglePlayServer).GetGameDetail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google_play.GooglePlay/GetGameDetail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GooglePlayServer).GetGameDetail(ctx, req.(*GameId))
	}
	return interceptor(ctx, in, info, handler)
}

// GooglePlay_ServiceDesc is the grpc.ServiceDesc for GooglePlay service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var GooglePlay_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "google_play.GooglePlay",
	HandlerType: (*GooglePlayServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetGameDetail",
			Handler:    _GooglePlay_GetGameDetail_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "google_play.protos",
}
